@page "{id?}"


@model PostModel
@{
    ViewData["Title"] = "Manage Post Info";
    Layout = "_LayoutAdmin";
}

<form method="post">
    <div class="blog-post">
        <div class="col-md-8">
            <h2>Post Info</h2>
            <input type="hidden" id="id" asp-for="Post.Id" />
            <input type="hidden" asp-for="Post.LastModified" />
            <div class="form-group">
                <label for="title">Title</label>
                <input class="form-control" placeholder="Title" asp-for="Post.Title" id="title" />
                <span asp-validation-for="Post.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="author">Author</label>
                <input class="form-control" placeholder="author" asp-for="Post.Author" id="Author" />
                <span asp-validation-for="Post.Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="slug">Slug</label>
                <input class="form-control" placeholder="slug" asp-for="Post.Slug" id="Slug" />
                <span asp-validation-for="Post.Slug" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="excerpt">Excerpt</label>&nbsp;<a href="javascript:void(0);" onclick="editContent('Excerpt', 'save-excerpt')"><span style="font-size:10pt;" class="glyphicon glyphicon-edit"></span></a>
                <textarea class="form-control" placeholder="excerpt" asp-for="Post.Excerpt" id="Excerpt"></textarea>
                <span asp-validation-for="Post.Excerpt" class="text-danger"></span>
                <button id="save-excerpt" style="display:none;" class="btn btn-primary" onclick="saveContent('Excerpt', 'save-excerpt')" type="button">Save</button>
            </div>
            <div class="form-group">
                <label for="content">Content</label>&nbsp;<a href="javascript:void(0);" onclick="editContent('Content', 'save-content')"><span style="font-size:10pt;" class="glyphicon glyphicon-edit"></span></a>
                <textarea class="form-control" placeholder="content" asp-for="Post.Content" id="Content"></textarea>
                <span asp-validation-for="Post.Content" class="text-danger"></span>
                <button id="save-content" style="display:none;" class="btn btn-primary" onclick="saveContent('Content', 'save-content')" type="button">Save</button>
            </div>
            <div class="form-group">
                <label for="pubdate">Publish Date</label>
                <input type="date" class="form-control" placeholder="Publish Date" asp-for="Post.PubDate" id="pubdate" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
        <div class="col-md-4">
            <h3>Categories</h3>
            <ol class="list-unstyled" id="categories"></ol>
            <div class="row">
                <div class="form-inline">
                    <div class="form-group">
                        <div class="input-group">
                            <input class="form-control" id="newcategory" placeholder="New Category" />
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="addCategory(false)">Add</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts
    {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var categories = [];
        @foreach(var c in Model.Post.PostCategories)
        {
            @:categories.push("@c");
        }
        $(document).ready(function () {
            for (var i = 0; i < categories.length; i++) {
                addCategoryToDOM(i, categories[i]);
            }
        });
        function addCategory() {
            var category = $('#newcategory').val();
            var exists = categories.filter(x => x.toLowerCase() === category.toLowerCase())[0];
            if (!exists) {
                addCategoryToDOM(categories.length, category);
                categories.push(category);
                $('#newcategory').val('').focus();
            } else {
                alert('Category already exists!');
            }
        }

        function addCategoryToDOM(index, category) {
            $('#categories').append('<li><input type="hidden" id="Post_PostCategories_' + index + '_" name="Post.PostCategories[' + index + ']" value="' + category + '" /><label>' + category + '</label></li>');
        }

        function editContent(control, btn) {
            $("#" + control).summernote({
                focus: true, callbacks: {
                    onImageUpload: function (files) {
                        uploadImage(files[0], $(this));
                    }
                }});
            $("#" + btn).show();
        }

        function saveContent(control, btn) {
            var html = $('#' + control).summernote('code');
            $('#' + control).val(html).summernote('destroy');
            $('#' + btn).hide();
        }

        function uploadImage(image, editor) {
            var formData = new FormData();
            formData.append("file", image);

            $.ajax({
                url: "/Admin/Post?handler=UploadImage",
                data: formData,
                type: 'POST',
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (!data) {
                        alert('Could not upload image!');
                        return;
                    }
                    editor.summernote('insertImage', data.url);
                },
                error: function () {
                    alert('Could not upload image!');
                }
            });
        };
    </script>
}